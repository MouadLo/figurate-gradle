plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.8.1'
    id "com.jfrog.bintray" version "1.7.3" apply false
}

scmVersion {
    tag {
        prefix = 'figurate-gradle'
    }
    versionCreator 'versionWithBranch'
    branchVersionCreator = [
        'master': 'simple'
    ]
}

subprojects { subproject ->

    apply plugin: 'groovy'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'codenarc'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile gradleApi()
        compile 'org.codehaus.groovy:groovy-all:2.4.11'

        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
        // required for mocking non-interface classes in spock..
        testCompile 'cglib:cglib-nodep:3.1'
    }

    group = 'org.figurate'
    version = rootProject.scmVersion.version

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }

    javadoc {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    codenarc {
        configFile = rootProject.file('config/codenarc/codenarc.xml')
        reportFormat = 'xml'
    }

    ext {
        isReleaseVersion = !version.endsWith("SNAPSHOT")

        // sonatype credentials
        sonatype_username = project.hasProperty('sonatype_username') ? project.getProperty('sonatype_username') : ''
        sonatype_password = project.hasProperty('sonatype_password') ? project.getProperty('sonatype_password') : ''

        // bintray credentials
        bintray_user = project.hasProperty('bintray_user') ? project.getProperty('bintray_user') : ''
        bintray_key = project.hasProperty('bintray_key') ? project.getProperty('bintray_key') : ''
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatype_username, password: sonatype_password)
                }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: sonatype_username, password: sonatype_password)
                }

                pom.project {
                    name subproject.name
                    packaging 'jar'
                    description subproject.description
                    url 'http://figurate.org'

                    scm {
                        url 'https://github.com/figurate/figurate-gradle'
                        connection 'scm:git@github.com:figurate/figurate-gradle.git'
                        developerConnection 'scm:git@github.com:figurate/figurate-gradle.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'fortuna'
                            name 'Ben Fortuna'
                        }
                    }
                }
            }
        }
    }
    publishing {
        publications {
            mavenArtifacts(MavenPublication) {
                from components.java
                artifact javadocJar
                artifact sourcesJar
                pom.withXml {
                    asNode().appendNode('name', subproject.pomName)
                    asNode().appendNode('description', subproject.description)
                    asNode().appendNode('url', 'http://figurate.org')

                    def scmNode = asNode().appendNode('scm')
                    scmNode.appendNode('url', 'https://github.com/figurate/figurate-gradle')
                    scmNode.appendNode('connection', 'scm:git@github.com:figurate/figurate-gradle.git')
                    scmNode.appendNode('developerConnection', 'scm:git@github.com:figurate/figurate-gradle.git')

                    def licenseNode = asNode().appendNode('licenses').appendNode('license')
                    licenseNode.appendNode('name', 'Whistlepost - License')
                    licenseNode.appendNode('url', 'https://raw.githubusercontent.com/figurate/figurate-gradle/master/LICENSE')
                    licenseNode.appendNode('distribution', 'repo')

                    def developerNode = asNode().appendNode('developers').appendNode('developer')
                    developerNode.appendNode('id', 'fortuna')
                    developerNode.appendNode('name', 'Ben Fortuna')
                }
            }
        }
    }

    bintray {
        user = bintray_user
        key = bintray_key
        pkg {
            repo = 'maven'
            name = subproject.name
            userOrg = 'figurate'
            licenses = ['BSD']
            vcsUrl = 'https://github.com/figurate/figurate-gradle.git'
            version {
                name = scmVersion.version
                desc = "Figurate Gradle $scmVersion.version"
                released  = new Date()
                vcsTag = "figurate-gradle-$scmVersion.version"
                gpg {
                    sign = isReleaseVersion
                }
                mavenCentralSync {
                    sync = isReleaseVersion
                    user = sonatype_username //OSS user token: mandatory
                    password = sonatype_password //OSS user password: mandatory
                    close = '0' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                }
            }
        }
//    configurations = ['archives']
        publications = ['mavenArtifacts']
    }
}

