buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'pl.allegro.tech.build', name: 'axion-release-plugin', version: '1.3.4'
    }
}

apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = 'figurate-gradle'
    }
    versionCreator 'versionWithBranch'
    nextVersion {
        suffix = 'alpha'
        separator = '-'
    }
}

subprojects {

    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'signing'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile gradleApi()
        compile 'org.codehaus.groovy:groovy-all:2.4.4'

        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
        // required for mocking non-interface classes in spock..
        testCompile 'cglib:cglib-nodep:3.1'
    }


    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    ext.pomName = ''

    afterEvaluate {
        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }
                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }

                    pom.project {
                        name pomName
                        packaging 'jar'
                        description project.description
                        url 'http://figurate.org/'

                        scm {
                            url 'https://github.com/figurate/figurate-gradle'
                            connection 'scm:git@github.com:figurate/figurate-gradle.git'
                            developerConnection 'scm:git@github.com:figurate/figurate-gradle.git'
                        }

                        licenses {
                            license {
                                name 'The Apache Software License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'fortuna'
                                name 'Ben Fortuna'
                            }
                        }
                    }
                }
            }
        }
    }

    group = 'org.figurate'
    version = rootProject.scmVersion.version

    ext {
        isReleaseVersion = !version.endsWith("SNAPSHOT")

        // sonatype credentials
        sonatypeUsername = project.hasProperty('sonatypeUsername') ? project.getProperty('sonatypeUsername') : ''
        sonatypePassword = project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword') : ''
    }
}
